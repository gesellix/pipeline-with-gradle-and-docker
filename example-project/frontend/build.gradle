import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
  dependencies {
    classpath 'com.moowork.gradle:gradle-grunt-plugin:0.9'
    classpath 'com.moowork.gradle:gradle-node-plugin:0.9'
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
  }
}

apply plugin: 'com.moowork.grunt'
apply plugin: 'spring-boot'
apply plugin: 'com.github.ben-manes.versions'


dependencies {
  compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
  compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
  compile("org.springframework:spring-beans:$springVersion")
  compile("org.springframework:spring-context:$springVersion")
  compile("org.springframework:spring-web:$springVersion")
  compile("org.springframework:spring-webmvc:$springVersion")

  compile("org.springframework.security:spring-security-core:$springSecurityVersion")
  compile("org.springframework.security:spring-security-config:$springSecurityVersion")
  compile("org.springframework.security:spring-security-web:$springSecurityVersion")

  compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jacksonVersion"
  compile 'ch.qos.logback:logback-access:1.1.3'

  compile project(':common')
}

node {
  version = '0.10.32'
  download = true
}

task grunt_release(type: GruntTask) {
  args = ['release', '--no-color']
}

def gruntfile = "$projectDir/Gruntfile.js"
def gruntSourceDir = "$projectDir/src"
def gruntBuildDir = "$buildDir/grunt"

clean.dependsOn grunt_clean
build.dependsOn grunt_release
jar.dependsOn grunt_release

grunt_release {
  inputs.files {
    fileTree(dir: gruntSourceDir)
    file(gruntfile)
  }
  outputs.files {
    fileTree(dir: gruntBuildDir)
  }
}

grunt_release.dependsOn installGrunt, npmInstall
grunt_clean.dependsOn installGrunt, npmInstall

// notwendig, wenn 'publish' ohne vorheriges 'build' aufgerufen wird
tasks.publish.dependsOn bootRepackage

jar {
  into('public') {
    from grunt_release.outputs.files
  }
}

processResources {
  filter ReplaceTokens, tokens: ['example.version': artifactVersion]
}

springBoot {
  mainClass = "org.hypoport.example.frontend.FrontendApplication"
}
